{{- define "clusterplex.pms.hardcodedValues" -}}
global:
  nameOverride: "pms"

image:
  repository: '{{ .Values.global.plexImage.repository }}'
  tag: '{{ .Values.global.plexImage.tag | default "latest" }}'
  imagePullPolicy: '{{ .Values.global.plexImage.imagePullPolicy }}'

configMaps:
  config:
    enabled: true
    data:
      VERSION: '{{ .Values.pms.config.version | default "docker" }}'
      TZ: '{{ .Values.global.timezone | default "America/Chicago" }}'
      PGID: '{{ .Values.global.PGID | default "1000" }}'
      PUID: '{{ .Values.global.PUID | default "1000" }}'
      DOCKER_MODS: 'ghcr.io/pabloromeo/clusterplex_dockermod:{{ .Values.global.clusterplexVersion | default .Chart.AppVersion }}'
      ORCHESTRATOR_URL: 'http://{{ .Release.Name }}-orchestrator:{{ .Values.orchestrator.config.port | default "3500" }}'
      {{ if .Values.pms.config.localRelayEnabled }}
      PMS_SERVICE: '{{ .Release.Name }}-pms'
      {{ else }}
      {{- if not (regexMatch "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$" .Values.pms.config.pmsIP) }}
      {{- fail "Invalid or empty pmsIP provided. This must be a valid IP address if localRelayEnabled is false." }}
      {{- end }}
      PMS_IP: '{{ .Values.pms.config.pmsIP }}'
      {{- end }}
      PMS_PORT: '{{ .Values.pms.config.port | default "32400" }}'
      TRANSCODER_VERBOSE: '{{ .Values.pms.config.transcoderVerbose | default "1" }}'
      {{ if .Values.worker.enabled }}
      TRANSCODE_OPERATING_MODE: '{{ .Values.pms.config.transcodeOperatingMode | default "both" }}'
      {{ else }}
      TRANSCODE_OPERATING_MODE: 'local'
      {{- end }}
      {{ if .Values.pms.config.localRelayEnabled }}
      LOCAL_RELAY_ENABLED: '1'
      LOCAL_RELAY_PORT: '{{ .Values.pms.config.relayPort | default "32499" }}'
      {{ else }}
      LOCAL_RELAY_ENABLED: '0'
      {{- end }}

{{ if .Values.pms.config.plexClaimToken }}
secrets:
  config:
    enabled: true
    stringData:
      PLEX_CLAIM: {{ .Values.pms.config.plexClaimToken }}
{{- end }}

envFrom:
  - configMapRef:
      name: "{{ .Release.Name }}-pms-config"
  {{ if .Values.pms.config.plexClaimToken }}
  - secretRef:
      name: "{{ .Release.Name }}-pms-config"
  {{- end }}

initContainers:
  {{ if .Values.global.sharedStorage.transcode.enabled }}
  set-transcode-permissions:
    image: busybox:1.36.1
    command: ['sh', '-c', 'chown -R {{ .Values.global.PUID | default "1000" }}:{{ .Values.global.PGID | default "1000" }} /transcode && chmod 0755 -R /transcode && echo "Configured /transcode permissions"' ]
    volumeMounts:
      - name: transcode
        mountPath: /transcode
  {{- end }}


service:
  main:
    type: '{{ .Values.pms.serviceConfig.type | default "ClusterIP" }}'
    externalTrafficPolicy: '{{ .Values.pms.serviceConfig.externalTrafficPolicy }}'
    annotations:
      {{- toYaml .Values.pms.serviceConfig.annotations | nindent 6 }}
    labels:
      {{- toYaml .Values.pms.serviceConfig.labels | nindent 6 }}
    ports:
      http:
        enabled: false
        primary: false
      plex:
        enabled: true
        primary: true
        port: '{{ .Values.pms.config.port | default "32400" }}'
        protocol: TCP
      relay:
        enabled: true
        primary: false
        port: '{{ .Values.pms.config.relayPort | default "32499" }}'
        protocol: TCP

{{ if .Values.pms.ingressConfig.enabled }}
ingress:
  main:
    primary: true
    {{- toYaml .Values.pms.ingressConfig | nindent 4 }}
{{- end }}

persistence:
  config:
    {{- toYaml .Values.pms.configVolume | nindent 4 }}
  {{ if .Values.global.sharedStorage.transcode.enabled }}
  transcode:
    {{- toYaml .Values.global.sharedStorage.transcode | nindent 4 }}
    accessMode: ReadWriteMany
    {{ if not .Values.global.sharedStorage.transcode.existingClaim }}
    existingClaim: {{ .Release.Name }}-transcode
    {{- end }}
  {{- end}}
  media:
    {{- toYaml .Values.global.sharedStorage.media | nindent 4 }}
    accessMode: ReadWriteMany
    {{ if not .Values.global.sharedStorage.media.existingClaim }}
    existingClaim: {{ .Release.Name }}-media
    {{- end }}
  {{ if .Values.pms.config.sslSecret }}
  ssl:
    enabled: true
    type: secret
    name: {{ .Values.pms.config.sslSecret }}
    mountPath: /ssl
  {{- end }}
{{- range $key, $value := .Values.global.sharedStorage.additionalMediaVolumes -}}
  {{ $key | nindent 2}}:
    {{- toYaml $value | nindent 4 }}
    accessMode: "ReadWriteMany"
    existingClaim: {{ if not $value.existingClaim }}{{ $.Release.Name }}-{{ $key }}{{ else }}{{ $value.existingClaim }}{{ end }}
{{- end }}

probes:
  {{ if .Values.pms.healthProbes.startup }}
  startup:
    enabled: true
    custom: true
    spec:
      httpGet:
        scheme: HTTP
        path: /identity
        port: plex
      periodSeconds: 10
      failureThreshold: 30
  {{ else }}
  startup:
    enabled: false
  {{- end }}
  {{ if .Values.pms.healthProbes.readiness }}
  readiness:
    enabled: true
    custom: true
    spec:
      httpGet:
        scheme: HTTP
        path: /identity
        port: plex
      initialDelaySeconds: 30
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 30
  {{ else }}
  readiness:
    enabled: false
  {{- end }}
  {{ if .Values.pms.healthProbes.liveness }}
  liveness:
    enabled: true
    custom: true
    spec:
      httpGet:
        scheme: HTTP
        path: /identity
        port: plex
      initialDelaySeconds: 120
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 6
  {{ else }}
  liveness:
    enabled: false
  {{- end }}
{{- end }}

{{ if .Values.pms.enabled }}
{{- $ctx := deepCopy . -}}
{{- $_ := get .Values "pms" | mergeOverwrite $ctx.Values -}}
{{- $_ = include "clusterplex.pms.hardcodedValues" . | fromYaml | merge $ctx.Values -}}
{{- include "bjw-s.common.loader.all" $ctx }}
{{ end }}